// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Train_project.Data;

namespace Train_project.Migrations
{
    [DbContext(typeof(TrainContext))]
    [Migration("20210518143610_addAdmin")]
    partial class addAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Train_project.Models.AdminLogin", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("admin_id");

                    b.ToTable("AdminLogins");
                });

            modelBuilder.Entity("Train_project.Models.Class", b =>
                {
                    b.Property<int>("C_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Aisle_no")
                        .HasColumnType("int");

                    b.Property<int>("Class_price")
                        .HasColumnType("int");

                    b.Property<string>("Classname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seat_no")
                        .HasColumnType("int");

                    b.HasKey("C_id");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("Train_project.Models.Passenger", b =>
                {
                    b.Property<int>("P_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("P_DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("P_contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P_lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("P_id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Train_project.Models.Promotion", b =>
                {
                    b.Property<int>("Promotion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Discount_percent")
                        .HasColumnType("real");

                    b.Property<DateTime>("Expiration_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start_date")
                        .HasColumnType("datetime2");

                    b.HasKey("Promotion_id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Train_project.Models.Route", b =>
                {
                    b.Property<int>("R_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Departure_city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departure_state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departure_station")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination_city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination_state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination_station")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("R_price")
                        .HasColumnType("int");

                    b.HasKey("R_id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Train_project.Models.Schedule", b =>
                {
                    b.Property<int>("Q_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckIn_time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departure_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departure_time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Estimated_ToA")
                        .HasColumnType("datetime2");

                    b.Property<int>("RouteR_id")
                        .HasColumnType("int");

                    b.HasKey("Q_id");

                    b.HasIndex("RouteR_id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Train_project.Models.Staff", b =>
                {
                    b.Property<int>("ST_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ST_DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("ST_fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ST_lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ST_resp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainTR_id")
                        .HasColumnType("int");

                    b.HasKey("ST_id");

                    b.HasIndex("TrainTR_id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("Train_project.Models.Ticket", b =>
                {
                    b.Property<int>("T_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassC_id")
                        .HasColumnType("int");

                    b.Property<int>("PassengerP_id")
                        .HasColumnType("int");

                    b.Property<int>("PromotionPromotion_id")
                        .HasColumnType("int");

                    b.Property<int>("RouteR_id")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleQ_id")
                        .HasColumnType("int");

                    b.Property<int>("TrainTR_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_issued")
                        .HasColumnType("datetime2");

                    b.HasKey("T_id");

                    b.HasIndex("ClassC_id");

                    b.HasIndex("PassengerP_id");

                    b.HasIndex("PromotionPromotion_id");

                    b.HasIndex("RouteR_id");

                    b.HasIndex("ScheduleQ_id");

                    b.HasIndex("TrainTR_id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Train_project.Models.Train", b =>
                {
                    b.Property<int>("TR_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Max_cap")
                        .HasColumnType("int");

                    b.Property<int>("Maxspeed")
                        .HasColumnType("int");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<int>("Seats_filled")
                        .HasColumnType("int");

                    b.Property<int>("Seats_remain")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TR_age")
                        .HasColumnType("datetime2");

                    b.HasKey("TR_id");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("Train_project.Models.Schedule", b =>
                {
                    b.HasOne("Train_project.Models.Route", "Route")
                        .WithMany("Schedules")
                        .HasForeignKey("RouteR_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Train_project.Models.Staff", b =>
                {
                    b.HasOne("Train_project.Models.Train", "Train")
                        .WithMany("Staffs")
                        .HasForeignKey("TrainTR_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("Train_project.Models.Ticket", b =>
                {
                    b.HasOne("Train_project.Models.Class", "Class")
                        .WithMany("Tickets")
                        .HasForeignKey("ClassC_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Train_project.Models.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerP_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Train_project.Models.Promotion", "Promotion")
                        .WithMany("Tickets")
                        .HasForeignKey("PromotionPromotion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Train_project.Models.Route", "Route")
                        .WithMany("Tickets")
                        .HasForeignKey("RouteR_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Train_project.Models.Schedule", "Schedule")
                        .WithMany("Tickets")
                        .HasForeignKey("ScheduleQ_id");

                    b.HasOne("Train_project.Models.Train", "Train")
                        .WithMany("Tickets")
                        .HasForeignKey("TrainTR_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Passenger");

                    b.Navigation("Promotion");

                    b.Navigation("Route");

                    b.Navigation("Schedule");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("Train_project.Models.Class", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Train_project.Models.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Train_project.Models.Promotion", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Train_project.Models.Route", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Train_project.Models.Schedule", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Train_project.Models.Train", b =>
                {
                    b.Navigation("Staffs");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
